/**
 * Binance Derivatives Trading USDS Futures WebSocket API
 *
 * OpenAPI Specification for the Binance Derivatives Trading USDS Futures WebSocket API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { WebsocketAPIBase, WebsocketApiResponse, WebsocketSendMsgOptions } from '@binance/common';
import type {
    AccountInformationResponse,
    AccountInformationV2Response,
    FuturesAccountBalanceResponse,
    FuturesAccountBalanceV2Response,
} from '../types';

/**
 * AccountApi - interface
 *
 * @interface AccountApi
 */
export interface AccountApiInterface {
    /**
     * Get current account information. User in single-asset/ multi-assets mode will see different value, see comments in response section for detail.
     *
     * Weight: 5
     *
     * @summary Account Information(USER_DATA)
     * @param {AccountInformationRequest} requestParameters Request parameters.
     *
     * @returns {Promise<AccountInformationResponse>}
     * @memberof AccountApiInterface
     */
    accountInformation(
        requestParameters?: AccountInformationRequest
    ): Promise<WebsocketApiResponse<AccountInformationResponse>>;

    /**
     * Get current account information. User in single-asset/ multi-assets mode will see different value, see comments in response section for detail.
     *
     * Weight: 5
     *
     * @summary Account Information V2(USER_DATA)
     * @param {AccountInformationV2Request} requestParameters Request parameters.
     *
     * @returns {Promise<AccountInformationV2Response>}
     * @memberof AccountApiInterface
     */
    accountInformationV2(
        requestParameters?: AccountInformationV2Request
    ): Promise<WebsocketApiResponse<AccountInformationV2Response>>;

    /**
     * Query account balance info
     *
     * Weight: 5
     *
     * @summary Futures Account Balance(USER_DATA)
     * @param {FuturesAccountBalanceRequest} requestParameters Request parameters.
     *
     * @returns {Promise<FuturesAccountBalanceResponse>}
     * @memberof AccountApiInterface
     */
    futuresAccountBalance(
        requestParameters?: FuturesAccountBalanceRequest
    ): Promise<WebsocketApiResponse<FuturesAccountBalanceResponse>>;

    /**
     * Query account balance info
     *
     * Weight: 5
     *
     * @summary Futures Account Balance V2(USER_DATA)
     * @param {FuturesAccountBalanceV2Request} requestParameters Request parameters.
     *
     * @returns {Promise<FuturesAccountBalanceV2Response>}
     * @memberof AccountApiInterface
     */
    futuresAccountBalanceV2(
        requestParameters?: FuturesAccountBalanceV2Request
    ): Promise<WebsocketApiResponse<FuturesAccountBalanceV2Response>>;
}

/**
 * Request parameters for accountInformation operation in AccountApi.
 * @interface AccountInformationRequest
 */
export interface AccountInformationRequest {
    /**
     * Unique WebSocket request ID.
     * @type {string}
     * @memberof AccountApiAccountInformation
     */
    readonly id?: string;

    /**
     *
     * @type {number}
     * @memberof AccountApiAccountInformation
     */
    readonly recvWindow?: number;
}

/**
 * Request parameters for accountInformationV2 operation in AccountApi.
 * @interface AccountInformationV2Request
 */
export interface AccountInformationV2Request {
    /**
     * Unique WebSocket request ID.
     * @type {string}
     * @memberof AccountApiAccountInformationV2
     */
    readonly id?: string;

    /**
     *
     * @type {number}
     * @memberof AccountApiAccountInformationV2
     */
    readonly recvWindow?: number;
}

/**
 * Request parameters for futuresAccountBalance operation in AccountApi.
 * @interface FuturesAccountBalanceRequest
 */
export interface FuturesAccountBalanceRequest {
    /**
     * Unique WebSocket request ID.
     * @type {string}
     * @memberof AccountApiFuturesAccountBalance
     */
    readonly id?: string;

    /**
     *
     * @type {number}
     * @memberof AccountApiFuturesAccountBalance
     */
    readonly recvWindow?: number;
}

/**
 * Request parameters for futuresAccountBalanceV2 operation in AccountApi.
 * @interface FuturesAccountBalanceV2Request
 */
export interface FuturesAccountBalanceV2Request {
    /**
     * Unique WebSocket request ID.
     * @type {string}
     * @memberof AccountApiFuturesAccountBalanceV2
     */
    readonly id?: string;

    /**
     *
     * @type {number}
     * @memberof AccountApiFuturesAccountBalanceV2
     */
    readonly recvWindow?: number;
}

/**
 * AccountApi - object-oriented interface
 * @class AccountApi
 * @extends {WebsocketAPIBase}
 */
export class AccountApi implements AccountApiInterface {
    private readonly websocketBase: WebsocketAPIBase;

    constructor(websocketBase: WebsocketAPIBase) {
        this.websocketBase = websocketBase;
    }

    /**
     * Get current account information. User in single-asset/ multi-assets mode will see different value, see comments in response section for detail.
     *
     * Weight: 5
     *
     * @summary Account Information(USER_DATA)
     * @param {AccountInformationRequest} requestParameters Request parameters.
     * @returns {Promise<AccountInformationResponse>}
     * @memberof AccountApi
     * @see {@link https://developers.binance.com/docs/derivatives/usds-margined-futures/account/websocket-api/Account-Information Binance API Documentation}
     */
    public accountInformation(
        requestParameters: AccountInformationRequest = {}
    ): Promise<WebsocketApiResponse<AccountInformationResponse>> {
        return this.websocketBase.sendMessage<AccountInformationResponse>(
            '/account.status'.slice(1),
            requestParameters as unknown as WebsocketSendMsgOptions,
            { isSigned: true, withApiKey: false }
        );
    }

    /**
     * Get current account information. User in single-asset/ multi-assets mode will see different value, see comments in response section for detail.
     *
     * Weight: 5
     *
     * @summary Account Information V2(USER_DATA)
     * @param {AccountInformationV2Request} requestParameters Request parameters.
     * @returns {Promise<AccountInformationV2Response>}
     * @memberof AccountApi
     * @see {@link https://developers.binance.com/docs/derivatives/usds-margined-futures/account/websocket-api/Account-Information-V2 Binance API Documentation}
     */
    public accountInformationV2(
        requestParameters: AccountInformationV2Request = {}
    ): Promise<WebsocketApiResponse<AccountInformationV2Response>> {
        return this.websocketBase.sendMessage<AccountInformationV2Response>(
            '/v2/account.status'.slice(1),
            requestParameters as unknown as WebsocketSendMsgOptions,
            { isSigned: true, withApiKey: false }
        );
    }

    /**
     * Query account balance info
     *
     * Weight: 5
     *
     * @summary Futures Account Balance(USER_DATA)
     * @param {FuturesAccountBalanceRequest} requestParameters Request parameters.
     * @returns {Promise<FuturesAccountBalanceResponse>}
     * @memberof AccountApi
     * @see {@link https://developers.binance.com/docs/derivatives/usds-margined-futures/account/websocket-api/Futures-Account-Balance Binance API Documentation}
     */
    public futuresAccountBalance(
        requestParameters: FuturesAccountBalanceRequest = {}
    ): Promise<WebsocketApiResponse<FuturesAccountBalanceResponse>> {
        return this.websocketBase.sendMessage<FuturesAccountBalanceResponse>(
            '/account.balance'.slice(1),
            requestParameters as unknown as WebsocketSendMsgOptions,
            { isSigned: true, withApiKey: false }
        );
    }

    /**
     * Query account balance info
     *
     * Weight: 5
     *
     * @summary Futures Account Balance V2(USER_DATA)
     * @param {FuturesAccountBalanceV2Request} requestParameters Request parameters.
     * @returns {Promise<FuturesAccountBalanceV2Response>}
     * @memberof AccountApi
     * @see {@link https://developers.binance.com/docs/derivatives/usds-margined-futures/account/websocket-api/Futures-Account-Balance-V2 Binance API Documentation}
     */
    public futuresAccountBalanceV2(
        requestParameters: FuturesAccountBalanceV2Request = {}
    ): Promise<WebsocketApiResponse<FuturesAccountBalanceV2Response>> {
        return this.websocketBase.sendMessage<FuturesAccountBalanceV2Response>(
            '/v2/account.balance'.slice(1),
            requestParameters as unknown as WebsocketSendMsgOptions,
            { isSigned: true, withApiKey: false }
        );
    }
}
