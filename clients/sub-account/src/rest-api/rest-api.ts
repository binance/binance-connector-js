/**
 * Binance Sub Account REST API
 *
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ConfigurationRestAPI, RestApiResponse, sendRequest } from '@binance/common';
import { AccountManagementApi } from './modules/account-management-api';
import { ApiManagementApi } from './modules/api-management-api';
import { AssetManagementApi } from './modules/asset-management-api';
import { ManagedSubAccountApi } from './modules/managed-sub-account-api';

import type {
    CreateAVirtualSubAccountRequest,
    EnableFuturesForSubAccountRequest,
    EnableLeverageTokenForSubAccountRequest,
    EnableMarginForSubAccountRequest,
    EnableOptionsForSubAccountRequest,
    GetFuturesPositionRiskOfSubAccountRequest,
    GetFuturesPositionRiskOfSubAccountV2Request,
    GetSubAccountsStatusOnMarginOrFuturesRequest,
    QuerySubAccountListRequest,
    QuerySubAccountTransactionStatisticsRequest,
} from './modules/account-management-api';
import type {
    AddIpRestrictionForSubAccountApiKeyRequest,
    DeleteIpListForASubAccountApiKeyRequest,
    GetIpRestrictionForASubAccountApiKeyRequest,
} from './modules/api-management-api';
import type {
    FuturesTransferForSubAccountRequest,
    GetDetailOnSubAccountsFuturesAccountRequest,
    GetDetailOnSubAccountsFuturesAccountV2Request,
    GetDetailOnSubAccountsMarginAccountRequest,
    GetMovePositionHistoryForSubAccountRequest,
    GetSubAccountDepositAddressRequest,
    GetSubAccountDepositHistoryRequest,
    GetSummaryOfSubAccountsFuturesAccountRequest,
    GetSummaryOfSubAccountsFuturesAccountV2Request,
    GetSummaryOfSubAccountsMarginAccountRequest,
    MarginTransferForSubAccountRequest,
    MovePositionForSubAccountRequest,
    QuerySubAccountAssetsRequest,
    QuerySubAccountAssetsAssetManagementRequest,
    QuerySubAccountFuturesAssetTransferHistoryRequest,
    QuerySubAccountSpotAssetTransferHistoryRequest,
    QuerySubAccountSpotAssetsSummaryRequest,
    QueryUniversalTransferHistoryRequest,
    SubAccountFuturesAssetTransferRequest,
    SubAccountTransferHistoryRequest,
    TransferToMasterRequest,
    TransferToSubAccountOfSameMasterRequest,
    UniversalTransferRequest,
} from './modules/asset-management-api';
import type {
    DepositAssetsIntoTheManagedSubAccountRequest,
    GetManagedSubAccountDepositAddressRequest,
    QueryManagedSubAccountAssetDetailsRequest,
    QueryManagedSubAccountFuturesAssetDetailsRequest,
    QueryManagedSubAccountListRequest,
    QueryManagedSubAccountMarginAssetDetailsRequest,
    QueryManagedSubAccountSnapshotRequest,
    QueryManagedSubAccountTransferLogMasterAccountInvestorRequest,
    QueryManagedSubAccountTransferLogMasterAccountTradingRequest,
    QueryManagedSubAccountTransferLogSubAccountTradingRequest,
    WithdrawlAssetsFromTheManagedSubAccountRequest,
} from './modules/managed-sub-account-api';

import type {
    CreateAVirtualSubAccountResponse,
    EnableFuturesForSubAccountResponse,
    EnableLeverageTokenForSubAccountResponse,
    EnableMarginForSubAccountResponse,
    EnableOptionsForSubAccountResponse,
    GetFuturesPositionRiskOfSubAccountResponse,
    GetFuturesPositionRiskOfSubAccountV2Response,
    GetSubAccountsStatusOnMarginOrFuturesResponse,
    QuerySubAccountListResponse,
    QuerySubAccountTransactionStatisticsResponse,
} from './types';
import type {
    AddIpRestrictionForSubAccountApiKeyResponse,
    DeleteIpListForASubAccountApiKeyResponse,
    GetIpRestrictionForASubAccountApiKeyResponse,
} from './types';
import type {
    FuturesTransferForSubAccountResponse,
    GetDetailOnSubAccountsFuturesAccountResponse,
    GetDetailOnSubAccountsFuturesAccountV2Response,
    GetDetailOnSubAccountsMarginAccountResponse,
    GetMovePositionHistoryForSubAccountResponse,
    GetSubAccountDepositAddressResponse,
    GetSubAccountDepositHistoryResponse,
    GetSummaryOfSubAccountsFuturesAccountResponse,
    GetSummaryOfSubAccountsFuturesAccountV2Response,
    GetSummaryOfSubAccountsMarginAccountResponse,
    MarginTransferForSubAccountResponse,
    MovePositionForSubAccountResponse,
    QuerySubAccountAssetsResponse,
    QuerySubAccountAssetsAssetManagementResponse,
    QuerySubAccountFuturesAssetTransferHistoryResponse,
    QuerySubAccountSpotAssetTransferHistoryResponse,
    QuerySubAccountSpotAssetsSummaryResponse,
    QueryUniversalTransferHistoryResponse,
    SubAccountFuturesAssetTransferResponse,
    SubAccountTransferHistoryResponse,
    TransferToMasterResponse,
    TransferToSubAccountOfSameMasterResponse,
    UniversalTransferResponse,
} from './types';
import type {
    DepositAssetsIntoTheManagedSubAccountResponse,
    GetManagedSubAccountDepositAddressResponse,
    QueryManagedSubAccountAssetDetailsResponse,
    QueryManagedSubAccountFuturesAssetDetailsResponse,
    QueryManagedSubAccountListResponse,
    QueryManagedSubAccountMarginAssetDetailsResponse,
    QueryManagedSubAccountSnapshotResponse,
    QueryManagedSubAccountTransferLogMasterAccountInvestorResponse,
    QueryManagedSubAccountTransferLogMasterAccountTradingResponse,
    QueryManagedSubAccountTransferLogSubAccountTradingResponse,
    WithdrawlAssetsFromTheManagedSubAccountResponse,
} from './types';

export class RestAPI {
    private configuration: ConfigurationRestAPI;
    private accountManagementApi: AccountManagementApi;
    private apiManagementApi: ApiManagementApi;
    private assetManagementApi: AssetManagementApi;
    private managedSubAccountApi: ManagedSubAccountApi;

    constructor(configuration: ConfigurationRestAPI) {
        this.configuration = configuration;
        this.accountManagementApi = new AccountManagementApi(configuration);
        this.apiManagementApi = new ApiManagementApi(configuration);
        this.assetManagementApi = new AssetManagementApi(configuration);
        this.managedSubAccountApi = new ManagedSubAccountApi(configuration);
    }

    /**
     * Generic function to send a request.
     * @param endpoint - The API endpoint to call.
     * @param method - HTTP method to use (GET, POST, DELETE, etc.).
     * @param params - Query parameters for the request.
     *
     * @returns A promise resolving to the response data object.
     */
    sendRequest<T>(
        endpoint: string,
        method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH',
        params: Record<string, unknown> = {}
    ): Promise<RestApiResponse<T>> {
        return sendRequest<T>(this.configuration, endpoint, method, params, undefined);
    }

    /**
     * Generic function to send a signed request.
     * @param endpoint - The API endpoint to call.
     * @param method - HTTP method to use (GET, POST, DELETE, etc.).
     * @param params - Query parameters for the request.
     *
     * @returns A promise resolving to the response data object.
     */
    sendSignedRequest<T>(
        endpoint: string,
        method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH',
        params: Record<string, unknown> = {}
    ): Promise<RestApiResponse<T>> {
        return sendRequest<T>(this.configuration, endpoint, method, params, undefined, {
            isSigned: true,
        });
    }

    /**
     * Create a Virtual Sub-account
     *
     * This request will generate a virtual sub account under your master account.
     * You need to enable "trade" option for the API Key which requests this endpoint.
     *
     * Weight: 1
     *
     * @summary Create a Virtual Sub-account(For Master Account)
     * @param {CreateAVirtualSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<CreateAVirtualSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Create-a-Virtual-Sub-account Binance API Documentation}
     */
    createAVirtualSubAccount(
        requestParameters: CreateAVirtualSubAccountRequest
    ): Promise<RestApiResponse<CreateAVirtualSubAccountResponse>> {
        return this.accountManagementApi.createAVirtualSubAccount(requestParameters);
    }

    /**
     * Enable Futures for Sub-account for Master Account
     *
     * Weight: 1
     *
     * @summary Enable Futures for Sub-account(For Master Account)
     * @param {EnableFuturesForSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<EnableFuturesForSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Enable-Futures-for-Sub-account Binance API Documentation}
     */
    enableFuturesForSubAccount(
        requestParameters: EnableFuturesForSubAccountRequest
    ): Promise<RestApiResponse<EnableFuturesForSubAccountResponse>> {
        return this.accountManagementApi.enableFuturesForSubAccount(requestParameters);
    }

    /**
     * Enable Leverage Token for Sub-account
     *
     * Weight: 1
     *
     * @summary Enable Leverage Token for Sub-account(For Master Account)
     * @param {EnableLeverageTokenForSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<EnableLeverageTokenForSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Enable-Leverage-Token-for-Sub-account Binance API Documentation}
     */
    enableLeverageTokenForSubAccount(
        requestParameters: EnableLeverageTokenForSubAccountRequest
    ): Promise<RestApiResponse<EnableLeverageTokenForSubAccountResponse>> {
        return this.accountManagementApi.enableLeverageTokenForSubAccount(requestParameters);
    }

    /**
     * Enable Margin for Sub-account
     *
     * Weight: 1
     *
     * @summary Enable Margin for Sub-account(For Master Account)
     * @param {EnableMarginForSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<EnableMarginForSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Enable-Margin-for-Sub-account Binance API Documentation}
     */
    enableMarginForSubAccount(
        requestParameters: EnableMarginForSubAccountRequest
    ): Promise<RestApiResponse<EnableMarginForSubAccountResponse>> {
        return this.accountManagementApi.enableMarginForSubAccount(requestParameters);
    }

    /**
     * Enable Options for Sub-account (For Master Account).
     *
     * Weight: 1
     *
     * @summary Enable Options for Sub-account(For Master Account)(USER_DATA)
     * @param {EnableOptionsForSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<EnableOptionsForSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Enable-Options-for-Sub-account Binance API Documentation}
     */
    enableOptionsForSubAccount(
        requestParameters: EnableOptionsForSubAccountRequest
    ): Promise<RestApiResponse<EnableOptionsForSubAccountResponse>> {
        return this.accountManagementApi.enableOptionsForSubAccount(requestParameters);
    }

    /**
     * Get Futures Position-Risk of Sub-account
     *
     * Weight: 10
     *
     * @summary Get Futures Position-Risk of Sub-account(For Master Account)
     * @param {GetFuturesPositionRiskOfSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFuturesPositionRiskOfSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Get-Futures-Position-Risk-of-Sub-account Binance API Documentation}
     */
    getFuturesPositionRiskOfSubAccount(
        requestParameters: GetFuturesPositionRiskOfSubAccountRequest
    ): Promise<RestApiResponse<GetFuturesPositionRiskOfSubAccountResponse>> {
        return this.accountManagementApi.getFuturesPositionRiskOfSubAccount(requestParameters);
    }

    /**
     * Get Futures Position-Risk of Sub-account V2
     *
     * Weight: 1
     *
     * @summary Get Futures Position-Risk of Sub-account V2(For Master Account)
     * @param {GetFuturesPositionRiskOfSubAccountV2Request} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFuturesPositionRiskOfSubAccountV2Response>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Get-Futures-Position-Risk-of-Sub-account-V2 Binance API Documentation}
     */
    getFuturesPositionRiskOfSubAccountV2(
        requestParameters: GetFuturesPositionRiskOfSubAccountV2Request
    ): Promise<RestApiResponse<GetFuturesPositionRiskOfSubAccountV2Response>> {
        return this.accountManagementApi.getFuturesPositionRiskOfSubAccountV2(requestParameters);
    }

    /**
     * Get Sub-account's Status on Margin Or Futures
     *
     * If no email sent, all sub-accounts' information will be returned.
     *
     * Weight: 10
     *
     * @summary Get Sub-account\'s Status on Margin Or Futures(For Master Account)
     * @param {GetSubAccountsStatusOnMarginOrFuturesRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetSubAccountsStatusOnMarginOrFuturesResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Get-Sub-accounts-Status-on-Margin-Or-Futures Binance API Documentation}
     */
    getSubAccountsStatusOnMarginOrFutures(
        requestParameters: GetSubAccountsStatusOnMarginOrFuturesRequest = {}
    ): Promise<RestApiResponse<GetSubAccountsStatusOnMarginOrFuturesResponse>> {
        return this.accountManagementApi.getSubAccountsStatusOnMarginOrFutures(requestParameters);
    }

    /**
     * Query Sub-account List
     *
     * Weight: 1
     *
     * @summary Query Sub-account List(For Master Account)
     * @param {QuerySubAccountListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QuerySubAccountListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Query-Sub-account-List Binance API Documentation}
     */
    querySubAccountList(
        requestParameters: QuerySubAccountListRequest = {}
    ): Promise<RestApiResponse<QuerySubAccountListResponse>> {
        return this.accountManagementApi.querySubAccountList(requestParameters);
    }

    /**
     * Query Sub-account Transaction statistics (For Master Account).
     *
     * Weight: 60
     *
     * @summary Query Sub-account Transaction Statistics(For Master Account)(USER_DATA)
     * @param {QuerySubAccountTransactionStatisticsRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QuerySubAccountTransactionStatisticsResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/account-management/Query-Sub-account-Transaction-Statistics Binance API Documentation}
     */
    querySubAccountTransactionStatistics(
        requestParameters: QuerySubAccountTransactionStatisticsRequest
    ): Promise<RestApiResponse<QuerySubAccountTransactionStatisticsResponse>> {
        return this.accountManagementApi.querySubAccountTransactionStatistics(requestParameters);
    }

    /**
     * Add IP Restriction for Sub-Account API key
     *
     * You need to enable Enable Spot & Margin Trading option for the api key which requests this endpoint
     *
     * Weight: 3000
     *
     * @summary Add IP Restriction for Sub-Account API key(For Master Account)
     * @param {AddIpRestrictionForSubAccountApiKeyRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<AddIpRestrictionForSubAccountApiKeyResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/api-management/Add-IP-Restriction-for-Sub-Account-API-key Binance API Documentation}
     */
    addIpRestrictionForSubAccountApiKey(
        requestParameters: AddIpRestrictionForSubAccountApiKeyRequest
    ): Promise<RestApiResponse<AddIpRestrictionForSubAccountApiKeyResponse>> {
        return this.apiManagementApi.addIpRestrictionForSubAccountApiKey(requestParameters);
    }

    /**
     * Delete IP List For a Sub-account API Key
     *
     * You need to enable Enable Spot & Margin Trading option for the api key which requests this endpoint
     *
     * Weight: 3000
     *
     * @summary Delete IP List For a Sub-account API Key(For Master Account)
     * @param {DeleteIpListForASubAccountApiKeyRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<DeleteIpListForASubAccountApiKeyResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/api-management/Delete-IP-List-For-a-Sub-account-API-Key Binance API Documentation}
     */
    deleteIpListForASubAccountApiKey(
        requestParameters: DeleteIpListForASubAccountApiKeyRequest
    ): Promise<RestApiResponse<DeleteIpListForASubAccountApiKeyResponse>> {
        return this.apiManagementApi.deleteIpListForASubAccountApiKey(requestParameters);
    }

    /**
     * Get IP Restriction for a Sub-account API Key
     *
     * Weight: 3000
     *
     * @summary Get IP Restriction for a Sub-account API Key(For Master Account)
     * @param {GetIpRestrictionForASubAccountApiKeyRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetIpRestrictionForASubAccountApiKeyResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/api-management/Get-IP-Restriction-for-a-Sub-account-API-Key Binance API Documentation}
     */
    getIpRestrictionForASubAccountApiKey(
        requestParameters: GetIpRestrictionForASubAccountApiKeyRequest
    ): Promise<RestApiResponse<GetIpRestrictionForASubAccountApiKeyResponse>> {
        return this.apiManagementApi.getIpRestrictionForASubAccountApiKey(requestParameters);
    }

    /**
     * Futures Transfer for Sub-account
     *
     * You need to open Enable Spot & Margin Trading permission for the API Key which requests this endpoint.
     *
     * Weight: 1
     *
     * @summary Futures Transfer for Sub-account(For Master Account)
     * @param {FuturesTransferForSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<FuturesTransferForSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Futures-Transfer-for-Sub-account Binance API Documentation}
     */
    futuresTransferForSubAccount(
        requestParameters: FuturesTransferForSubAccountRequest
    ): Promise<RestApiResponse<FuturesTransferForSubAccountResponse>> {
        return this.assetManagementApi.futuresTransferForSubAccount(requestParameters);
    }

    /**
     * Get Detail on Sub-account's Futures Account
     *
     * Weight: 10
     *
     * @summary Get Detail on Sub-account\'s Futures Account(For Master Account)
     * @param {GetDetailOnSubAccountsFuturesAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetDetailOnSubAccountsFuturesAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Detail-on-Sub-accounts-Futures-Account Binance API Documentation}
     */
    getDetailOnSubAccountsFuturesAccount(
        requestParameters: GetDetailOnSubAccountsFuturesAccountRequest
    ): Promise<RestApiResponse<GetDetailOnSubAccountsFuturesAccountResponse>> {
        return this.assetManagementApi.getDetailOnSubAccountsFuturesAccount(requestParameters);
    }

    /**
     * Get Detail on Sub-account's Futures Account
     *
     * Weight: 1
     *
     * @summary Get Detail on Sub-account\'s Futures Account V2(For Master Account)
     * @param {GetDetailOnSubAccountsFuturesAccountV2Request} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetDetailOnSubAccountsFuturesAccountV2Response>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Detail-on-Sub-accounts-Futures-Account-V2 Binance API Documentation}
     */
    getDetailOnSubAccountsFuturesAccountV2(
        requestParameters: GetDetailOnSubAccountsFuturesAccountV2Request
    ): Promise<RestApiResponse<GetDetailOnSubAccountsFuturesAccountV2Response>> {
        return this.assetManagementApi.getDetailOnSubAccountsFuturesAccountV2(requestParameters);
    }

    /**
     * Get Detail on Sub-account's Margin Account
     *
     * Weight: 10
     *
     * @summary Get Detail on Sub-account\'s Margin Account(For Master Account)
     * @param {GetDetailOnSubAccountsMarginAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetDetailOnSubAccountsMarginAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Detail-on-Sub-accounts-Margin-Account Binance API Documentation}
     */
    getDetailOnSubAccountsMarginAccount(
        requestParameters: GetDetailOnSubAccountsMarginAccountRequest
    ): Promise<RestApiResponse<GetDetailOnSubAccountsMarginAccountResponse>> {
        return this.assetManagementApi.getDetailOnSubAccountsMarginAccount(requestParameters);
    }

    /**
     * Query move position history
     *
     * If `startTime` and `endTime` not sent, return records of the last 90 days by default with 1000 maximum limits
     * If `startTime` is sent and `endTime` is not sent, return records of [max(startTime, now-90d), now].
     * If `startTime` is not sent and `endTime` is sent, return records of [max(now,endTime-90d), endTime].
     *
     * Weight: 150
     *
     * @summary Get Move Position History for Sub-account (For Master Account)
     * @param {GetMovePositionHistoryForSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetMovePositionHistoryForSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Move-Position-History-for-Sub-account Binance API Documentation}
     */
    getMovePositionHistoryForSubAccount(
        requestParameters: GetMovePositionHistoryForSubAccountRequest
    ): Promise<RestApiResponse<GetMovePositionHistoryForSubAccountResponse>> {
        return this.assetManagementApi.getMovePositionHistoryForSubAccount(requestParameters);
    }

    /**
     * Fetch sub-account deposit address
     *
     * `amount` needs to be sent if using LIGHTNING network
     *
     * Weight: 1
     *
     * @summary Get Sub-account Deposit Address(For Master Account)
     * @param {GetSubAccountDepositAddressRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetSubAccountDepositAddressResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Sub-account-Deposit-Address Binance API Documentation}
     */
    getSubAccountDepositAddress(
        requestParameters: GetSubAccountDepositAddressRequest
    ): Promise<RestApiResponse<GetSubAccountDepositAddressResponse>> {
        return this.assetManagementApi.getSubAccountDepositAddress(requestParameters);
    }

    /**
     * Fetch sub-account deposit history
     *
     * Weight: 1
     *
     * @summary Get Sub-account Deposit History(For Master Account)
     * @param {GetSubAccountDepositHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetSubAccountDepositHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Sub-account-Deposit-History Binance API Documentation}
     */
    getSubAccountDepositHistory(
        requestParameters: GetSubAccountDepositHistoryRequest
    ): Promise<RestApiResponse<GetSubAccountDepositHistoryResponse>> {
        return this.assetManagementApi.getSubAccountDepositHistory(requestParameters);
    }

    /**
     * Get Summary of Sub-account's Futures Account
     *
     * Weight: 1
     *
     * @summary Get Summary of Sub-account\'s Futures Account(For Master Account)
     * @param {GetSummaryOfSubAccountsFuturesAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetSummaryOfSubAccountsFuturesAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Summary-of-Sub-accounts-Futures-Account Binance API Documentation}
     */
    getSummaryOfSubAccountsFuturesAccount(
        requestParameters: GetSummaryOfSubAccountsFuturesAccountRequest = {}
    ): Promise<RestApiResponse<GetSummaryOfSubAccountsFuturesAccountResponse>> {
        return this.assetManagementApi.getSummaryOfSubAccountsFuturesAccount(requestParameters);
    }

    /**
     * Get Summary of Sub-account's Futures Account
     *
     * Weight: 10
     *
     * @summary Get Summary of Sub-account\'s Futures Account V2(For Master Account)
     * @param {GetSummaryOfSubAccountsFuturesAccountV2Request} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetSummaryOfSubAccountsFuturesAccountV2Response>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Summary-of-Sub-accounts-Futures-Account-V2 Binance API Documentation}
     */
    getSummaryOfSubAccountsFuturesAccountV2(
        requestParameters: GetSummaryOfSubAccountsFuturesAccountV2Request
    ): Promise<RestApiResponse<GetSummaryOfSubAccountsFuturesAccountV2Response>> {
        return this.assetManagementApi.getSummaryOfSubAccountsFuturesAccountV2(requestParameters);
    }

    /**
     * Get Summary of Sub-account's Margin Account
     *
     * Weight: 10
     *
     * @summary Get Summary of Sub-account\'s Margin Account(For Master Account)
     * @param {GetSummaryOfSubAccountsMarginAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetSummaryOfSubAccountsMarginAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Get-Summary-of-Sub-accounts-Margin-Account Binance API Documentation}
     */
    getSummaryOfSubAccountsMarginAccount(
        requestParameters: GetSummaryOfSubAccountsMarginAccountRequest = {}
    ): Promise<RestApiResponse<GetSummaryOfSubAccountsMarginAccountResponse>> {
        return this.assetManagementApi.getSummaryOfSubAccountsMarginAccount(requestParameters);
    }

    /**
     * Margin Transfer for Sub-account
     *
     * You need to open Enable Spot & Margin Trading permission for the API Key which requests this endpoint.
     *
     * Weight: 1
     *
     * @summary Margin Transfer for Sub-account(For Master Account)
     * @param {MarginTransferForSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<MarginTransferForSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Margin-Transfer-for-Sub-account Binance API Documentation}
     */
    marginTransferForSubAccount(
        requestParameters: MarginTransferForSubAccountRequest
    ): Promise<RestApiResponse<MarginTransferForSubAccountResponse>> {
        return this.assetManagementApi.marginTransferForSubAccount(requestParameters);
    }

    /**
     * Move position between sub-master, master-sub, or sub-sub accounts when necessary
     *
     * You need to Enable Trading permission for the API Key which requests this endpoint.
     * This function only support VIP level 7-9.
     * Only master account can use the function
     * Quantity should be positive number only
     * The function support normal account, PM PRO and PM PRO SPAN.
     * Only support for from account has positions
     * For all orders in the same orderArgs request, if any symbol’s total close position quantity is bigger than the symbol’s current position quantity, all batch orders in the same list will fail simultaneously.
     * Only support cross margin mode
     * The price for move position is MarkPrice only.
     * Not support for MSA.
     * Not support for the symbol under Reduce-Only.
     *
     * Weight: 150
     *
     * @summary Move Position for Sub-account (For Master Account)
     * @param {MovePositionForSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<MovePositionForSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Move-Position-for-Sub-account Binance API Documentation}
     */
    movePositionForSubAccount(
        requestParameters: MovePositionForSubAccountRequest
    ): Promise<RestApiResponse<MovePositionForSubAccountResponse>> {
        return this.assetManagementApi.movePositionForSubAccount(requestParameters);
    }

    /**
     * Fetch sub-account assets
     *
     * Weight: 60
     *
     * @summary Query Sub-account Assets(For Master Account)
     * @param {QuerySubAccountAssetsRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QuerySubAccountAssetsResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Query-Sub-account-Assets-V3 Binance API Documentation}
     */
    querySubAccountAssets(
        requestParameters: QuerySubAccountAssetsRequest
    ): Promise<RestApiResponse<QuerySubAccountAssetsResponse>> {
        return this.assetManagementApi.querySubAccountAssets(requestParameters);
    }

    /**
     * Fetch sub-account assets
     *
     * Weight: 60
     *
     * @summary Query Sub-account Assets (For Master Account)(USER_DATA)
     * @param {QuerySubAccountAssetsAssetManagementRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QuerySubAccountAssetsAssetManagementResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Query-Sub-account-Assets-V4 Binance API Documentation}
     */
    querySubAccountAssetsAssetManagement(
        requestParameters: QuerySubAccountAssetsAssetManagementRequest
    ): Promise<RestApiResponse<QuerySubAccountAssetsAssetManagementResponse>> {
        return this.assetManagementApi.querySubAccountAssetsAssetManagement(requestParameters);
    }

    /**
     * Query Sub-account Futures Asset Transfer History
     *
     * Weight: 1
     *
     * @summary Query Sub-account Futures Asset Transfer History(For Master Account)
     * @param {QuerySubAccountFuturesAssetTransferHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QuerySubAccountFuturesAssetTransferHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Query-Sub-account-Futures-Asset-Transfer-History Binance API Documentation}
     */
    querySubAccountFuturesAssetTransferHistory(
        requestParameters: QuerySubAccountFuturesAssetTransferHistoryRequest
    ): Promise<RestApiResponse<QuerySubAccountFuturesAssetTransferHistoryResponse>> {
        return this.assetManagementApi.querySubAccountFuturesAssetTransferHistory(
            requestParameters
        );
    }

    /**
     * Query Sub-account Spot Asset Transfer History
     *
     * fromEmail and toEmail cannot be sent at the same time.
     * Return fromEmail equal master account email by default.
     *
     * Weight: 1
     *
     * @summary Query Sub-account Spot Asset Transfer History(For Master Account)
     * @param {QuerySubAccountSpotAssetTransferHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QuerySubAccountSpotAssetTransferHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Query-Sub-account-Spot-Asset-Transfer-History Binance API Documentation}
     */
    querySubAccountSpotAssetTransferHistory(
        requestParameters: QuerySubAccountSpotAssetTransferHistoryRequest = {}
    ): Promise<RestApiResponse<QuerySubAccountSpotAssetTransferHistoryResponse>> {
        return this.assetManagementApi.querySubAccountSpotAssetTransferHistory(requestParameters);
    }

    /**
     * Get BTC valued asset summary of subaccounts.
     *
     * Weight: 1
     *
     * @summary Query Sub-account Spot Assets Summary(For Master Account)
     * @param {QuerySubAccountSpotAssetsSummaryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QuerySubAccountSpotAssetsSummaryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Query-Sub-account-Spot-Assets-Summary Binance API Documentation}
     */
    querySubAccountSpotAssetsSummary(
        requestParameters: QuerySubAccountSpotAssetsSummaryRequest = {}
    ): Promise<RestApiResponse<QuerySubAccountSpotAssetsSummaryResponse>> {
        return this.assetManagementApi.querySubAccountSpotAssetsSummary(requestParameters);
    }

    /**
     * Query Universal Transfer History
     *
     * fromEmail and toEmail cannot be sent at the same time.
     * Return fromEmail equal master account email by default.
     * The query time period must be less than 7 days.
     * If startTime and endTime not sent, return records of the last 7 days by default.
     *
     * Weight: 1
     *
     * @summary Query Universal Transfer History(For Master Account)
     * @param {QueryUniversalTransferHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryUniversalTransferHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Query-Universal-Transfer-History Binance API Documentation}
     */
    queryUniversalTransferHistory(
        requestParameters: QueryUniversalTransferHistoryRequest = {}
    ): Promise<RestApiResponse<QueryUniversalTransferHistoryResponse>> {
        return this.assetManagementApi.queryUniversalTransferHistory(requestParameters);
    }

    /**
     * Sub-account Futures Asset Transfer
     *
     *
     * Master account can transfer max 2000 times a minute
     * There must be sufficient margin balance in futures wallet to execute transferring.
     *
     * Weight: 1
     *
     * @summary Sub-account Futures Asset Transfer(For Master Account)
     * @param {SubAccountFuturesAssetTransferRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<SubAccountFuturesAssetTransferResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Sub-account-Futures-Asset-Transfer Binance API Documentation}
     */
    subAccountFuturesAssetTransfer(
        requestParameters: SubAccountFuturesAssetTransferRequest
    ): Promise<RestApiResponse<SubAccountFuturesAssetTransferResponse>> {
        return this.assetManagementApi.subAccountFuturesAssetTransfer(requestParameters);
    }

    /**
     * Sub-account Transfer History
     *
     * If type is not sent, the records of type 2: transfer out will be returned by default.
     * If startTime and endTime are not sent, the recent 30-day data will be returned.
     *
     * Weight: 1
     *
     * @summary Sub-account Transfer History(For Sub-account)
     * @param {SubAccountTransferHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<SubAccountTransferHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Sub-account-Transfer-History Binance API Documentation}
     */
    subAccountTransferHistory(
        requestParameters: SubAccountTransferHistoryRequest = {}
    ): Promise<RestApiResponse<SubAccountTransferHistoryResponse>> {
        return this.assetManagementApi.subAccountTransferHistory(requestParameters);
    }

    /**
     * Transfer to Master
     *
     * You need to open Enable Spot & Margin Trading permission for the API Key which requests this endpoint.
     *
     * Weight: 1
     *
     * @summary Transfer to Master(For Sub-account)
     * @param {TransferToMasterRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<TransferToMasterResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Transfer-to-Master Binance API Documentation}
     */
    transferToMaster(
        requestParameters: TransferToMasterRequest
    ): Promise<RestApiResponse<TransferToMasterResponse>> {
        return this.assetManagementApi.transferToMaster(requestParameters);
    }

    /**
     * Transfer to Sub-account of Same Master
     *
     * You need to open Enable Spot & Margin Trading permission for the API Key which requests this endpoint.
     *
     * Weight: 1
     *
     * @summary Transfer to Sub-account of Same Master(For Sub-account)
     * @param {TransferToSubAccountOfSameMasterRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<TransferToSubAccountOfSameMasterResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Transfer-to-Sub-account-of-Same-Master Binance API Documentation}
     */
    transferToSubAccountOfSameMaster(
        requestParameters: TransferToSubAccountOfSameMasterRequest
    ): Promise<RestApiResponse<TransferToSubAccountOfSameMasterResponse>> {
        return this.assetManagementApi.transferToSubAccountOfSameMaster(requestParameters);
    }

    /**
     * Universal Transfer
     *
     * You need to enable "internal transfer" option for the api key which requests this endpoint.
     * Transfer from master account by default if fromEmail is not sent.
     * Transfer to master account by default if toEmail is not sent.
     * At least either fromEmail or toEmail need to be sent when the fromAccountType and the toAccountType are the same.
     * Supported transfer scenarios:
     * `SPOT` transfer to `SPOT`, `USDT_FUTURE`, `COIN_FUTURE` (regardless of master or sub)
     * `SPOT`, `USDT_FUTURE`, `COIN_FUTURE` transfer to `SPOT`  (regardless of master or sub)
     * Master account `SPOT` transfer to sub-account `MARGIN(Cross)`, `ISOLATED_MARGIN`
     * Sub-account `MARGIN(Cross)`, `ISOLATED_MARGIN` transfer to master account `SPOT`
     * Sub-account `MARGIN(Cross)` transfer to Sub-account `MARGIN(Cross)`
     *
     * Weight: 360
     *
     * @summary Universal Transfer(For Master Account)
     * @param {UniversalTransferRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<UniversalTransferResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/asset-management/Universal-Transfer Binance API Documentation}
     */
    universalTransfer(
        requestParameters: UniversalTransferRequest
    ): Promise<RestApiResponse<UniversalTransferResponse>> {
        return this.assetManagementApi.universalTransfer(requestParameters);
    }

    /**
     * Deposit Assets Into The Managed Sub-account
     *
     * You need to enable `Enable Spot & Margin Trading` option for the api key which requests this endpoint
     *
     * Weight: 1
     *
     * @summary Deposit Assets Into The Managed Sub-account(For Investor Master Account)
     * @param {DepositAssetsIntoTheManagedSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<DepositAssetsIntoTheManagedSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Deposit-Assets-Into-The-Managed-Sub-account Binance API Documentation}
     */
    depositAssetsIntoTheManagedSubAccount(
        requestParameters: DepositAssetsIntoTheManagedSubAccountRequest
    ): Promise<RestApiResponse<DepositAssetsIntoTheManagedSubAccountResponse>> {
        return this.managedSubAccountApi.depositAssetsIntoTheManagedSubAccount(requestParameters);
    }

    /**
     * Get investor's managed sub-account deposit address.
     *
     * If `network` is not send, return with default `network` of the `coin`.
     * * `amount` needs to be sent if using LIGHTNING network
     *
     * Weight: 1
     *
     * @summary Get Managed Sub-account Deposit Address (For Investor Master Account)(USER_DATA)
     * @param {GetManagedSubAccountDepositAddressRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetManagedSubAccountDepositAddressResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Get-Managed-Sub-account-Deposit-Address Binance API Documentation}
     */
    getManagedSubAccountDepositAddress(
        requestParameters: GetManagedSubAccountDepositAddressRequest
    ): Promise<RestApiResponse<GetManagedSubAccountDepositAddressResponse>> {
        return this.managedSubAccountApi.getManagedSubAccountDepositAddress(requestParameters);
    }

    /**
     * Query Managed Sub-account Asset Details
     *
     * Weight: 1
     *
     * @summary Query Managed Sub-account Asset Details(For Investor Master Account)
     * @param {QueryManagedSubAccountAssetDetailsRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryManagedSubAccountAssetDetailsResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Query-Managed-Sub-account-Asset-Details Binance API Documentation}
     */
    queryManagedSubAccountAssetDetails(
        requestParameters: QueryManagedSubAccountAssetDetailsRequest
    ): Promise<RestApiResponse<QueryManagedSubAccountAssetDetailsResponse>> {
        return this.managedSubAccountApi.queryManagedSubAccountAssetDetails(requestParameters);
    }

    /**
     * Investor can use this api to query managed sub account futures asset details
     *
     * Weight: 60
     *
     * @summary Query Managed Sub-account Futures Asset Details(For Investor Master Account)(USER_DATA)
     * @param {QueryManagedSubAccountFuturesAssetDetailsRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryManagedSubAccountFuturesAssetDetailsResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Query-Managed-Sub-account-Futures-Asset-Details Binance API Documentation}
     */
    queryManagedSubAccountFuturesAssetDetails(
        requestParameters: QueryManagedSubAccountFuturesAssetDetailsRequest
    ): Promise<RestApiResponse<QueryManagedSubAccountFuturesAssetDetailsResponse>> {
        return this.managedSubAccountApi.queryManagedSubAccountFuturesAssetDetails(
            requestParameters
        );
    }

    /**
     * Get investor's managed sub-account list.
     *
     * Weight: 60
     *
     * @summary Query Managed Sub-account List(For Investor)(USER_DATA)
     * @param {QueryManagedSubAccountListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryManagedSubAccountListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Query-Managed-Sub-account-List Binance API Documentation}
     */
    queryManagedSubAccountList(
        requestParameters: QueryManagedSubAccountListRequest = {}
    ): Promise<RestApiResponse<QueryManagedSubAccountListResponse>> {
        return this.managedSubAccountApi.queryManagedSubAccountList(requestParameters);
    }

    /**
     * Investor can use this api to query managed sub account margin asset details
     *
     * Weight: 1
     *
     * @summary Query Managed Sub-account Margin Asset Details(For Investor Master Account)(USER_DATA)
     * @param {QueryManagedSubAccountMarginAssetDetailsRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryManagedSubAccountMarginAssetDetailsResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Query-Managed-Sub-account-Margin-Asset-Details Binance API Documentation}
     */
    queryManagedSubAccountMarginAssetDetails(
        requestParameters: QueryManagedSubAccountMarginAssetDetailsRequest
    ): Promise<RestApiResponse<QueryManagedSubAccountMarginAssetDetailsResponse>> {
        return this.managedSubAccountApi.queryManagedSubAccountMarginAssetDetails(
            requestParameters
        );
    }

    /**
     * Query Managed Sub-account Snapshot
     *
     * The query time period must be less then 30 days
     * Support query within the last one month only
     * If startTimeand endTime not sent, return records of the last 7 days by default
     *
     * Weight: 2400
     *
     * @summary Query Managed Sub-account Snapshot(For Investor Master Account)
     * @param {QueryManagedSubAccountSnapshotRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryManagedSubAccountSnapshotResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Query-Managed-Sub-account-Snapshot Binance API Documentation}
     */
    queryManagedSubAccountSnapshot(
        requestParameters: QueryManagedSubAccountSnapshotRequest
    ): Promise<RestApiResponse<QueryManagedSubAccountSnapshotResponse>> {
        return this.managedSubAccountApi.queryManagedSubAccountSnapshot(requestParameters);
    }

    /**
     * Investor can use this api to query managed sub account transfer log. This endpoint is available for investor of Managed Sub-Account. A Managed Sub-Account is an account type for investors who value flexibility in asset allocation and account application, while delegating trades to a professional trading team.
     * Please refer to [link](https://www.binance.com/en/support/faq/how-to-get-started-with-managed-sub-account-functions-and-frequently-asked-questions-0594748722704383a7c369046e489459)
     *
     * Weight: 1
     *
     * @summary Query Managed Sub Account Transfer Log(For Investor Master Account)(USER_DATA)
     * @param {QueryManagedSubAccountTransferLogMasterAccountInvestorRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryManagedSubAccountTransferLogMasterAccountInvestorResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Query-Managed-Sub-Account-Transfer-Log-Investor Binance API Documentation}
     */
    queryManagedSubAccountTransferLogMasterAccountInvestor(
        requestParameters: QueryManagedSubAccountTransferLogMasterAccountInvestorRequest
    ): Promise<RestApiResponse<QueryManagedSubAccountTransferLogMasterAccountInvestorResponse>> {
        return this.managedSubAccountApi.queryManagedSubAccountTransferLogMasterAccountInvestor(
            requestParameters
        );
    }

    /**
     * Trading team can use this api to query managed sub account transfer log. This endpoint is available for trading team of Managed Sub-Account. A Managed Sub-Account is an account type for investors who value flexibility in asset allocation and account application, while delegating trades to a professional trading team.
     * Please refer to [link](https://www.binance.com/en/support/faq/how-to-get-started-with-managed-sub-account-functions-and-frequently-asked-questions-0594748722704383a7c369046e489459)
     *
     * Weight: 60
     *
     * @summary Query Managed Sub Account Transfer Log(For Trading Team Master Account)(USER_DATA)
     * @param {QueryManagedSubAccountTransferLogMasterAccountTradingRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryManagedSubAccountTransferLogMasterAccountTradingResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Query-Managed-Sub-Account-Transfer-Log-Trading-Team-Master Binance API Documentation}
     */
    queryManagedSubAccountTransferLogMasterAccountTrading(
        requestParameters: QueryManagedSubAccountTransferLogMasterAccountTradingRequest
    ): Promise<RestApiResponse<QueryManagedSubAccountTransferLogMasterAccountTradingResponse>> {
        return this.managedSubAccountApi.queryManagedSubAccountTransferLogMasterAccountTrading(
            requestParameters
        );
    }

    /**
     * Query Managed Sub Account Transfer Log (For Trading Team Sub Account)
     *
     * Weight: 60
     *
     * @summary Query Managed Sub Account Transfer Log (For Trading Team Sub Account)(USER_DATA)
     * @param {QueryManagedSubAccountTransferLogSubAccountTradingRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryManagedSubAccountTransferLogSubAccountTradingResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Query-Managed-Sub-Account-Transfer-Log-Trading-Team-Sub Binance API Documentation}
     */
    queryManagedSubAccountTransferLogSubAccountTrading(
        requestParameters: QueryManagedSubAccountTransferLogSubAccountTradingRequest
    ): Promise<RestApiResponse<QueryManagedSubAccountTransferLogSubAccountTradingResponse>> {
        return this.managedSubAccountApi.queryManagedSubAccountTransferLogSubAccountTrading(
            requestParameters
        );
    }

    /**
     * Withdrawl Assets From The Managed Sub-account
     *
     * You need to enable `Enable Spot & Margin Trading` option for the api key which requests this endpoint
     *
     * Weight: 1
     *
     * @summary Withdrawl Assets From The Managed Sub-account(For Investor Master Account)
     * @param {WithdrawlAssetsFromTheManagedSubAccountRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<WithdrawlAssetsFromTheManagedSubAccountResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/sub_account/managed-sub-account/Withdrawl-Assets-From-The-Managed-Sub-account Binance API Documentation}
     */
    withdrawlAssetsFromTheManagedSubAccount(
        requestParameters: WithdrawlAssetsFromTheManagedSubAccountRequest
    ): Promise<RestApiResponse<WithdrawlAssetsFromTheManagedSubAccountResponse>> {
        return this.managedSubAccountApi.withdrawlAssetsFromTheManagedSubAccount(requestParameters);
    }
}
