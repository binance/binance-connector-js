/**
 * Binance Crypto Loan REST API
 *
 * OpenAPI Specification for the Binance Crypto Loan REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ConfigurationRestAPI, RestApiResponse, sendRequest } from '@binance/common';
import { FlexibleRateApi } from './modules/flexible-rate-api';
import { StableRateApi } from './modules/stable-rate-api';

import type {
    CheckCollateralRepayRateRequest,
    FlexibleLoanAdjustLtvRequest,
    FlexibleLoanBorrowRequest,
    FlexibleLoanCollateralRepaymentRequest,
    FlexibleLoanRepayRequest,
    GetFlexibleLoanAssetsDataRequest,
    GetFlexibleLoanBorrowHistoryRequest,
    GetFlexibleLoanCollateralAssetsDataRequest,
    GetFlexibleLoanLiquidationHistoryRequest,
    GetFlexibleLoanLtvAdjustmentHistoryRequest,
    GetFlexibleLoanOngoingOrdersRequest,
    GetFlexibleLoanRepaymentHistoryRequest,
} from './modules/flexible-rate-api';
import type {
    CheckCollateralRepayRateStableRateRequest,
    CryptoLoanAdjustLtvRequest,
    CryptoLoanBorrowRequest,
    CryptoLoanCustomizeMarginCallRequest,
    CryptoLoanRepayRequest,
    GetCollateralAssetsDataRequest,
    GetCryptoLoansIncomeHistoryRequest,
    GetLoanBorrowHistoryRequest,
    GetLoanLtvAdjustmentHistoryRequest,
    GetLoanOngoingOrdersRequest,
    GetLoanRepaymentHistoryRequest,
    GetLoanableAssetsDataRequest,
} from './modules/stable-rate-api';

import type {
    CheckCollateralRepayRateResponse,
    FlexibleLoanAdjustLtvResponse,
    FlexibleLoanBorrowResponse,
    FlexibleLoanCollateralRepaymentResponse,
    FlexibleLoanRepayResponse,
    GetFlexibleLoanAssetsDataResponse,
    GetFlexibleLoanBorrowHistoryResponse,
    GetFlexibleLoanCollateralAssetsDataResponse,
    GetFlexibleLoanLiquidationHistoryResponse,
    GetFlexibleLoanLtvAdjustmentHistoryResponse,
    GetFlexibleLoanOngoingOrdersResponse,
    GetFlexibleLoanRepaymentHistoryResponse,
} from './types';
import type {
    CheckCollateralRepayRateStableRateResponse,
    CryptoLoanAdjustLtvResponse,
    CryptoLoanBorrowResponse,
    CryptoLoanCustomizeMarginCallResponse,
    CryptoLoanRepayResponse,
    GetCollateralAssetsDataResponse,
    GetCryptoLoansIncomeHistoryResponse,
    GetLoanBorrowHistoryResponse,
    GetLoanLtvAdjustmentHistoryResponse,
    GetLoanOngoingOrdersResponse,
    GetLoanRepaymentHistoryResponse,
    GetLoanableAssetsDataResponse,
} from './types';

export class RestAPI {
    private configuration: ConfigurationRestAPI;
    private flexibleRateApi: FlexibleRateApi;
    private stableRateApi: StableRateApi;

    constructor(configuration: ConfigurationRestAPI) {
        this.configuration = configuration;
        this.flexibleRateApi = new FlexibleRateApi(configuration);
        this.stableRateApi = new StableRateApi(configuration);
    }

    /**
     * Generic function to send a request.
     * @param endpoint - The API endpoint to call.
     * @param method - HTTP method to use (GET, POST, DELETE, etc.).
     * @param params - Query parameters for the request.
     *
     * @returns A promise resolving to the response data object.
     */
    sendRequest<T>(
        endpoint: string,
        method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH',
        params: Record<string, unknown> = {}
    ): Promise<RestApiResponse<T>> {
        return sendRequest<T>(this.configuration, endpoint, method, params, undefined);
    }

    /**
     * Generic function to send a signed request.
     * @param endpoint - The API endpoint to call.
     * @param method - HTTP method to use (GET, POST, DELETE, etc.).
     * @param params - Query parameters for the request.
     *
     * @returns A promise resolving to the response data object.
     */
    sendSignedRequest<T>(
        endpoint: string,
        method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH',
        params: Record<string, unknown> = {}
    ): Promise<RestApiResponse<T>> {
        return sendRequest<T>(this.configuration, endpoint, method, params, undefined, {
            isSigned: true,
        });
    }

    /**
     *
     * Weight: 6000
     *
     * @summary Check Collateral Repay Rate (USER_DATA)
     * @param {CheckCollateralRepayRateRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<CheckCollateralRepayRateResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/user-information/Check-Collateral-Repay-Rate Binance API Documentation}
     */
    checkCollateralRepayRate(
        requestParameters: CheckCollateralRepayRateRequest
    ): Promise<RestApiResponse<CheckCollateralRepayRateResponse>> {
        return this.flexibleRateApi.checkCollateralRepayRate(requestParameters);
    }

    /**
     * Flexible Loan Adjust LTV
     *
     * API Key needs Spot & Margin Trading permission for this endpoint
     *
     * Weight: 6000
     *
     * @summary Flexible Loan Adjust LTV(TRADE)
     * @param {FlexibleLoanAdjustLtvRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<FlexibleLoanAdjustLtvResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/trade/Flexible-Loan-Adjust-LTV Binance API Documentation}
     */
    flexibleLoanAdjustLtv(
        requestParameters: FlexibleLoanAdjustLtvRequest
    ): Promise<RestApiResponse<FlexibleLoanAdjustLtvResponse>> {
        return this.flexibleRateApi.flexibleLoanAdjustLtv(requestParameters);
    }

    /**
     * Borrow Flexible Loan
     *
     *
     * Only available for master account
     * You can customize LTV by entering loanAmount and collateralAmount.
     *
     * Weight: 6000
     *
     * @summary Flexible Loan Borrow(TRADE)
     * @param {FlexibleLoanBorrowRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<FlexibleLoanBorrowResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/trade/Flexible-Loan-Borrow Binance API Documentation}
     */
    flexibleLoanBorrow(
        requestParameters: FlexibleLoanBorrowRequest
    ): Promise<RestApiResponse<FlexibleLoanBorrowResponse>> {
        return this.flexibleRateApi.flexibleLoanBorrow(requestParameters);
    }

    /**
     *
     * Weight: 6000
     *
     * @summary Flexible Loan Collateral Repayment (TRADE)
     * @param {FlexibleLoanCollateralRepaymentRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<FlexibleLoanCollateralRepaymentResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/trade/Flexible-Loan-Collateral-Repay Binance API Documentation}
     */
    flexibleLoanCollateralRepayment(
        requestParameters: FlexibleLoanCollateralRepaymentRequest
    ): Promise<RestApiResponse<FlexibleLoanCollateralRepaymentResponse>> {
        return this.flexibleRateApi.flexibleLoanCollateralRepayment(requestParameters);
    }

    /**
     * Flexible Loan Repay
     *
     *
     * repayAmount is mandatory even fullRepayment = FALSE
     *
     * Weight: 6000
     *
     * @summary Flexible Loan Repay(TRADE)
     * @param {FlexibleLoanRepayRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<FlexibleLoanRepayResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/trade/Flexible-Loan-Repay Binance API Documentation}
     */
    flexibleLoanRepay(
        requestParameters: FlexibleLoanRepayRequest
    ): Promise<RestApiResponse<FlexibleLoanRepayResponse>> {
        return this.flexibleRateApi.flexibleLoanRepay(requestParameters);
    }

    /**
     * Get interest rate and borrow limit of flexible loanable assets. The borrow limit is shown in USD value.
     *
     * Weight: 400
     *
     * @summary Get Flexible Loan Assets Data(USER_DATA)
     * @param {GetFlexibleLoanAssetsDataRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFlexibleLoanAssetsDataResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/market-data/Get-Flexible-Loan-Assets-Data Binance API Documentation}
     */
    getFlexibleLoanAssetsData(
        requestParameters: GetFlexibleLoanAssetsDataRequest = {}
    ): Promise<RestApiResponse<GetFlexibleLoanAssetsDataResponse>> {
        return this.flexibleRateApi.getFlexibleLoanAssetsData(requestParameters);
    }

    /**
     * Get Flexible Loan Borrow History
     *
     * If startTime and endTime are not sent, the recent 90-day data will be returned.
     * The max interval between startTime and endTime is 180 days.
     *
     * Weight: 400
     *
     * @summary Get Flexible Loan Borrow History(USER_DATA)
     * @param {GetFlexibleLoanBorrowHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFlexibleLoanBorrowHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/user-information/Get-Flexible-Loan-Borrow-History Binance API Documentation}
     */
    getFlexibleLoanBorrowHistory(
        requestParameters: GetFlexibleLoanBorrowHistoryRequest = {}
    ): Promise<RestApiResponse<GetFlexibleLoanBorrowHistoryResponse>> {
        return this.flexibleRateApi.getFlexibleLoanBorrowHistory(requestParameters);
    }

    /**
     * Get LTV information and collateral limit of flexible loan's collateral assets. The collateral limit is shown in USD value.
     *
     * Weight: 400
     *
     * @summary Get Flexible Loan Collateral Assets Data(USER_DATA)
     * @param {GetFlexibleLoanCollateralAssetsDataRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFlexibleLoanCollateralAssetsDataResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/market-data/Get-Flexible-Loan-Collateral-Assets-Data Binance API Documentation}
     */
    getFlexibleLoanCollateralAssetsData(
        requestParameters: GetFlexibleLoanCollateralAssetsDataRequest = {}
    ): Promise<RestApiResponse<GetFlexibleLoanCollateralAssetsDataResponse>> {
        return this.flexibleRateApi.getFlexibleLoanCollateralAssetsData(requestParameters);
    }

    /**
     *
     * Weight: 400
     *
     * @summary Get Flexible Loan Liquidation History (USER_DATA)
     * @param {GetFlexibleLoanLiquidationHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFlexibleLoanLiquidationHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/user-information/Get-Flexible-Loan-Liquidation-History Binance API Documentation}
     */
    getFlexibleLoanLiquidationHistory(
        requestParameters: GetFlexibleLoanLiquidationHistoryRequest = {}
    ): Promise<RestApiResponse<GetFlexibleLoanLiquidationHistoryResponse>> {
        return this.flexibleRateApi.getFlexibleLoanLiquidationHistory(requestParameters);
    }

    /**
     * Get Flexible Loan LTV Adjustment History
     *
     * If startTime and endTime are not sent, the recent 90-day data will be returned.
     * The max interval between startTime and endTime is 180 days.
     *
     * Weight: 400
     *
     * @summary Get Flexible Loan LTV Adjustment History(USER_DATA)
     * @param {GetFlexibleLoanLtvAdjustmentHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFlexibleLoanLtvAdjustmentHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/user-information/Get-Flexible-Loan-LTV-Adjustment-History Binance API Documentation}
     */
    getFlexibleLoanLtvAdjustmentHistory(
        requestParameters: GetFlexibleLoanLtvAdjustmentHistoryRequest = {}
    ): Promise<RestApiResponse<GetFlexibleLoanLtvAdjustmentHistoryResponse>> {
        return this.flexibleRateApi.getFlexibleLoanLtvAdjustmentHistory(requestParameters);
    }

    /**
     * Get Flexible Loan Ongoing Orders
     *
     * Weight: 300
     *
     * @summary Get Flexible Loan Ongoing Orders(USER_DATA)
     * @param {GetFlexibleLoanOngoingOrdersRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFlexibleLoanOngoingOrdersResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/user-information/Get-Flexible-Loan-Ongoing-Orders Binance API Documentation}
     */
    getFlexibleLoanOngoingOrders(
        requestParameters: GetFlexibleLoanOngoingOrdersRequest = {}
    ): Promise<RestApiResponse<GetFlexibleLoanOngoingOrdersResponse>> {
        return this.flexibleRateApi.getFlexibleLoanOngoingOrders(requestParameters);
    }

    /**
     * Get Flexible Loan Repayment History
     *
     * If startTime and endTime are not sent, the recent 90-day data will be returned.
     * The max interval between startTime and endTime is 180 days.
     *
     * Weight: 400
     *
     * @summary Get Flexible Loan Repayment History(USER_DATA)
     * @param {GetFlexibleLoanRepaymentHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFlexibleLoanRepaymentHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/flexible-rate/user-information/Get-Flexible-Loan-Repayment-History Binance API Documentation}
     */
    getFlexibleLoanRepaymentHistory(
        requestParameters: GetFlexibleLoanRepaymentHistoryRequest = {}
    ): Promise<RestApiResponse<GetFlexibleLoanRepaymentHistoryResponse>> {
        return this.flexibleRateApi.getFlexibleLoanRepaymentHistory(requestParameters);
    }

    /**
     * Get the the rate of collateral coin / loan coin when using collateral repay, the rate will be valid within 8 second.
     *
     * Weight: 6000
     *
     * @summary Check Collateral Repay Rate(USER_DATA)
     * @param {CheckCollateralRepayRateStableRateRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<CheckCollateralRepayRateStableRateResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/market-data/Check-Collateral-Repay-Rate Binance API Documentation}
     */
    checkCollateralRepayRateStableRate(
        requestParameters: CheckCollateralRepayRateStableRateRequest
    ): Promise<RestApiResponse<CheckCollateralRepayRateStableRateResponse>> {
        return this.stableRateApi.checkCollateralRepayRateStableRate(requestParameters);
    }

    /**
     * Crypto Loan Adjust LTV
     *
     * Weight: 6000
     *
     * @summary Crypto Loan Adjust LTV(TRADE)
     * @param {CryptoLoanAdjustLtvRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<CryptoLoanAdjustLtvResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/trade/Crypto-Loan-Adjust-LTV Binance API Documentation}
     */
    cryptoLoanAdjustLtv(
        requestParameters: CryptoLoanAdjustLtvRequest
    ): Promise<RestApiResponse<CryptoLoanAdjustLtvResponse>> {
        return this.stableRateApi.cryptoLoanAdjustLtv(requestParameters);
    }

    /**
     * Crypto Loan Borrow
     *
     * Weight: 6000
     *
     * @summary Crypto Loan Borrow(TRADE)
     * @param {CryptoLoanBorrowRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<CryptoLoanBorrowResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/trade/Crypto-Loan-Borrow Binance API Documentation}
     */
    cryptoLoanBorrow(
        requestParameters: CryptoLoanBorrowRequest
    ): Promise<RestApiResponse<CryptoLoanBorrowResponse>> {
        return this.stableRateApi.cryptoLoanBorrow(requestParameters);
    }

    /**
     * Customize Margin Call
     *
     * Weight: 6000
     *
     * @summary Crypto Loan Customize Margin Call(TRADE)
     * @param {CryptoLoanCustomizeMarginCallRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<CryptoLoanCustomizeMarginCallResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/trade/Crypto-Loan-Customize-Margin-Call Binance API Documentation}
     */
    cryptoLoanCustomizeMarginCall(
        requestParameters: CryptoLoanCustomizeMarginCallRequest
    ): Promise<RestApiResponse<CryptoLoanCustomizeMarginCallResponse>> {
        return this.stableRateApi.cryptoLoanCustomizeMarginCall(requestParameters);
    }

    /**
     * Crypto Loan Repay
     *
     * Weight: 6000
     *
     * @summary Crypto Loan Repay(TRADE)
     * @param {CryptoLoanRepayRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<CryptoLoanRepayResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/trade/Crypto-Loan-Repay Binance API Documentation}
     */
    cryptoLoanRepay(
        requestParameters: CryptoLoanRepayRequest
    ): Promise<RestApiResponse<CryptoLoanRepayResponse>> {
        return this.stableRateApi.cryptoLoanRepay(requestParameters);
    }

    /**
     * Get LTV information and collateral limit of collateral assets. The collateral limit is shown in USD value.
     *
     * Weight: 400
     *
     * @summary Get Collateral Assets Data(USER_DATA)
     * @param {GetCollateralAssetsDataRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetCollateralAssetsDataResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/market-data/Get-Collateral-Assets-Data Binance API Documentation}
     */
    getCollateralAssetsData(
        requestParameters: GetCollateralAssetsDataRequest = {}
    ): Promise<RestApiResponse<GetCollateralAssetsDataResponse>> {
        return this.stableRateApi.getCollateralAssetsData(requestParameters);
    }

    /**
     * Get Crypto Loans Income History
     *
     * If startTime and endTime are not sent, the recent 7-day data will be returned.
     * The max interval between startTime and endTime is 30 days.
     *
     * Weight: 6000
     *
     * @summary Get Crypto Loans Income History(USER_DATA)
     * @param {GetCryptoLoansIncomeHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetCryptoLoansIncomeHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/market-data/Get-Crypto-Loans-Income-History Binance API Documentation}
     */
    getCryptoLoansIncomeHistory(
        requestParameters: GetCryptoLoansIncomeHistoryRequest = {}
    ): Promise<RestApiResponse<GetCryptoLoansIncomeHistoryResponse>> {
        return this.stableRateApi.getCryptoLoansIncomeHistory(requestParameters);
    }

    /**
     * Get Loan Borrow History
     *
     * If startTime and endTime are not sent, the recent 90-day data will be returned.
     * The max interval between startTime and endTime is 180 days.
     *
     * Weight: 400
     *
     * @summary Get Loan Borrow History(USER_DATA)
     * @param {GetLoanBorrowHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetLoanBorrowHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/user-information/Get-Loan-Borrow-History Binance API Documentation}
     */
    getLoanBorrowHistory(
        requestParameters: GetLoanBorrowHistoryRequest = {}
    ): Promise<RestApiResponse<GetLoanBorrowHistoryResponse>> {
        return this.stableRateApi.getLoanBorrowHistory(requestParameters);
    }

    /**
     * Get Loan LTV Adjustment History
     *
     * If startTime and endTime are not sent, the recent 90-day data will be returned.
     * The max interval between startTime and endTime is 180 days.
     *
     * Weight: 400
     *
     * @summary Get Loan LTV Adjustment History(USER_DATA)
     * @param {GetLoanLtvAdjustmentHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetLoanLtvAdjustmentHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/user-information/Get-Loan-LTV-Adjustment-History Binance API Documentation}
     */
    getLoanLtvAdjustmentHistory(
        requestParameters: GetLoanLtvAdjustmentHistoryRequest = {}
    ): Promise<RestApiResponse<GetLoanLtvAdjustmentHistoryResponse>> {
        return this.stableRateApi.getLoanLtvAdjustmentHistory(requestParameters);
    }

    /**
     * Get Loan Ongoing Orders
     *
     * Weight: 300
     *
     * @summary Get Loan Ongoing Orders(USER_DATA)
     * @param {GetLoanOngoingOrdersRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetLoanOngoingOrdersResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/user-information/Get-Loan-Ongoing-Orders Binance API Documentation}
     */
    getLoanOngoingOrders(
        requestParameters: GetLoanOngoingOrdersRequest = {}
    ): Promise<RestApiResponse<GetLoanOngoingOrdersResponse>> {
        return this.stableRateApi.getLoanOngoingOrders(requestParameters);
    }

    /**
     * Get Loan Repayment History
     *
     * If startTime and endTime are not sent, the recent 90-day data will be returned.
     * The max interval between startTime and endTime is 180 days.
     *
     * Weight: 400
     *
     * @summary Get Loan Repayment History(USER_DATA)
     * @param {GetLoanRepaymentHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetLoanRepaymentHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/user-information/Get-Loan-Repayment-History Binance API Documentation}
     */
    getLoanRepaymentHistory(
        requestParameters: GetLoanRepaymentHistoryRequest = {}
    ): Promise<RestApiResponse<GetLoanRepaymentHistoryResponse>> {
        return this.stableRateApi.getLoanRepaymentHistory(requestParameters);
    }

    /**
     * Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.
     *
     * Weight: 400
     *
     * @summary Get Loanable Assets Data(USER_DATA)
     * @param {GetLoanableAssetsDataRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetLoanableAssetsDataResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/crypto_loan/stable-rate/market-data/Get-Loanable-Assets-Data Binance API Documentation}
     */
    getLoanableAssetsData(
        requestParameters: GetLoanableAssetsDataRequest = {}
    ): Promise<RestApiResponse<GetLoanableAssetsDataResponse>> {
        return this.stableRateApi.getLoanableAssetsData(requestParameters);
    }
}
