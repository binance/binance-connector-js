/**
 * Binance Derivatives Trading Portfolio Margin Pro REST API
 *
 * OpenAPI Specification for the Binance Derivatives Trading Portfolio Margin Pro REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    ConfigurationRestAPI,
    TimeUnit,
    RestApiResponse,
    sendRequest,
    type RequestArgs,
} from '@binance/common';
import type {
    GetPortfolioMarginAssetLeverageResponse,
    PortfolioMarginCollateralRateResponse,
    PortfolioMarginProTieredCollateralRateResponse,
    QueryPortfolioMarginAssetIndexPriceResponse,
} from '../types';

/**
 * MarketDataApi - axios parameter creator
 */
const MarketDataApiAxiosParamCreator = function (configuration: ConfigurationRestAPI) {
    return {
        /**
         * Get Portfolio Margin Asset Leverage
         *
         * Weight: 50
         *
         * @summary Get Portfolio Margin Asset Leverage(USER_DATA)
         *
         * @throws {RequiredError}
         */
        getPortfolioMarginAssetLeverage: async (): Promise<RequestArgs> => {
            const localVarQueryParameter: Record<string, unknown> = {};

            let _timeUnit: TimeUnit | undefined;
            if ('timeUnit' in configuration) _timeUnit = configuration.timeUnit as TimeUnit;

            return {
                endpoint: '/sapi/v1/portfolio/margin-asset-leverage',
                method: 'GET',
                params: localVarQueryParameter,
                timeUnit: _timeUnit,
            };
        },
        /**
         * Portfolio Margin Collateral Rate
         *
         * Weight: 50
         *
         * @summary Portfolio Margin Collateral Rate(MARKET_DATA)
         *
         * @throws {RequiredError}
         */
        portfolioMarginCollateralRate: async (): Promise<RequestArgs> => {
            const localVarQueryParameter: Record<string, unknown> = {};

            let _timeUnit: TimeUnit | undefined;
            if ('timeUnit' in configuration) _timeUnit = configuration.timeUnit as TimeUnit;

            return {
                endpoint: '/sapi/v1/portfolio/collateralRate',
                method: 'GET',
                params: localVarQueryParameter,
                timeUnit: _timeUnit,
            };
        },
        /**
         * Portfolio Margin PRO Tiered Collateral Rate
         *
         * Weight: 50
         *
         * @summary Portfolio Margin Pro Tiered Collateral Rate(USER_DATA)
         * @param {number} [recvWindow]
         *
         * @throws {RequiredError}
         */
        portfolioMarginProTieredCollateralRate: async (
            recvWindow?: number
        ): Promise<RequestArgs> => {
            const localVarQueryParameter: Record<string, unknown> = {};

            if (recvWindow !== undefined && recvWindow !== null) {
                localVarQueryParameter['recvWindow'] = recvWindow;
            }

            let _timeUnit: TimeUnit | undefined;
            if ('timeUnit' in configuration) _timeUnit = configuration.timeUnit as TimeUnit;

            return {
                endpoint: '/sapi/v2/portfolio/collateralRate',
                method: 'GET',
                params: localVarQueryParameter,
                timeUnit: _timeUnit,
            };
        },
        /**
         * Query Portfolio Margin Asset Index Price
         *
         * Weight: 1 if send asset or 50 if not send asset
         *
         * @summary Query Portfolio Margin Asset Index Price (MARKET_DATA)
         * @param {string} [asset]
         *
         * @throws {RequiredError}
         */
        queryPortfolioMarginAssetIndexPrice: async (asset?: string): Promise<RequestArgs> => {
            const localVarQueryParameter: Record<string, unknown> = {};

            if (asset !== undefined && asset !== null) {
                localVarQueryParameter['asset'] = asset;
            }

            let _timeUnit: TimeUnit | undefined;
            if ('timeUnit' in configuration) _timeUnit = configuration.timeUnit as TimeUnit;

            return {
                endpoint: '/sapi/v1/portfolio/asset-index-price',
                method: 'GET',
                params: localVarQueryParameter,
                timeUnit: _timeUnit,
            };
        },
    };
};

/**
 * MarketDataApi - interface
 * @interface MarketDataApi
 */
export interface MarketDataApiInterface {
    /**
     * Get Portfolio Margin Asset Leverage
     *
     * Weight: 50
     *
     * @summary Get Portfolio Margin Asset Leverage(USER_DATA)
     *
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @memberof MarketDataApiInterface
     */
    getPortfolioMarginAssetLeverage(): Promise<
        RestApiResponse<GetPortfolioMarginAssetLeverageResponse>
    >;
    /**
     * Portfolio Margin Collateral Rate
     *
     * Weight: 50
     *
     * @summary Portfolio Margin Collateral Rate(MARKET_DATA)
     *
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @memberof MarketDataApiInterface
     */
    portfolioMarginCollateralRate(): Promise<
        RestApiResponse<PortfolioMarginCollateralRateResponse>
    >;
    /**
     * Portfolio Margin PRO Tiered Collateral Rate
     *
     * Weight: 50
     *
     * @summary Portfolio Margin Pro Tiered Collateral Rate(USER_DATA)
     * @param {PortfolioMarginProTieredCollateralRateRequest} requestParameters Request parameters.
     *
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @memberof MarketDataApiInterface
     */
    portfolioMarginProTieredCollateralRate(
        requestParameters?: PortfolioMarginProTieredCollateralRateRequest
    ): Promise<RestApiResponse<PortfolioMarginProTieredCollateralRateResponse>>;
    /**
     * Query Portfolio Margin Asset Index Price
     *
     * Weight: 1 if send asset or 50 if not send asset
     *
     * @summary Query Portfolio Margin Asset Index Price (MARKET_DATA)
     * @param {QueryPortfolioMarginAssetIndexPriceRequest} requestParameters Request parameters.
     *
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @memberof MarketDataApiInterface
     */
    queryPortfolioMarginAssetIndexPrice(
        requestParameters?: QueryPortfolioMarginAssetIndexPriceRequest
    ): Promise<RestApiResponse<QueryPortfolioMarginAssetIndexPriceResponse>>;
}

/**
 * Request parameters for portfolioMarginProTieredCollateralRate operation in MarketDataApi.
 * @interface PortfolioMarginProTieredCollateralRateRequest
 */
export interface PortfolioMarginProTieredCollateralRateRequest {
    /**
     *
     * @type {number}
     * @memberof MarketDataApiPortfolioMarginProTieredCollateralRate
     */
    readonly recvWindow?: number;
}

/**
 * Request parameters for queryPortfolioMarginAssetIndexPrice operation in MarketDataApi.
 * @interface QueryPortfolioMarginAssetIndexPriceRequest
 */
export interface QueryPortfolioMarginAssetIndexPriceRequest {
    /**
     *
     * @type {string}
     * @memberof MarketDataApiQueryPortfolioMarginAssetIndexPrice
     */
    readonly asset?: string;
}

/**
 * MarketDataApi - object-oriented interface
 * @class MarketDataApi
 */
export class MarketDataApi implements MarketDataApiInterface {
    private readonly configuration: ConfigurationRestAPI;
    private localVarAxiosParamCreator;

    constructor(configuration: ConfigurationRestAPI) {
        this.configuration = configuration;
        this.localVarAxiosParamCreator = MarketDataApiAxiosParamCreator(configuration);
    }

    /**
     * Get Portfolio Margin Asset Leverage
     *
     * Weight: 50
     *
     * @summary Get Portfolio Margin Asset Leverage(USER_DATA)
     * @returns {Promise<RestApiResponse<GetPortfolioMarginAssetLeverageResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @memberof MarketDataApi
     * @see {@link https://developers.binance.com/docs/derivatives/portfolio-margin-pro/market-data/Get-Portfolio-Margin-Asset-Leverage Binance API Documentation}
     */
    public async getPortfolioMarginAssetLeverage(): Promise<
        RestApiResponse<GetPortfolioMarginAssetLeverageResponse>
        > {
        const localVarAxiosArgs =
            await this.localVarAxiosParamCreator.getPortfolioMarginAssetLeverage();
        return sendRequest<GetPortfolioMarginAssetLeverageResponse>(
            this.configuration,
            localVarAxiosArgs.endpoint,
            localVarAxiosArgs.method,
            localVarAxiosArgs.params,
            localVarAxiosArgs?.timeUnit,
            { isSigned: true }
        );
    }

    /**
     * Portfolio Margin Collateral Rate
     *
     * Weight: 50
     *
     * @summary Portfolio Margin Collateral Rate(MARKET_DATA)
     * @returns {Promise<RestApiResponse<PortfolioMarginCollateralRateResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @memberof MarketDataApi
     * @see {@link https://developers.binance.com/docs/derivatives/portfolio-margin-pro/market-data/Classic-Portfolio-Margin-Collateral-Rate Binance API Documentation}
     */
    public async portfolioMarginCollateralRate(): Promise<
        RestApiResponse<PortfolioMarginCollateralRateResponse>
        > {
        const localVarAxiosArgs =
            await this.localVarAxiosParamCreator.portfolioMarginCollateralRate();
        return sendRequest<PortfolioMarginCollateralRateResponse>(
            this.configuration,
            localVarAxiosArgs.endpoint,
            localVarAxiosArgs.method,
            localVarAxiosArgs.params,
            localVarAxiosArgs?.timeUnit,
            { isSigned: false }
        );
    }

    /**
     * Portfolio Margin PRO Tiered Collateral Rate
     *
     * Weight: 50
     *
     * @summary Portfolio Margin Pro Tiered Collateral Rate(USER_DATA)
     * @param {PortfolioMarginProTieredCollateralRateRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<PortfolioMarginProTieredCollateralRateResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @memberof MarketDataApi
     * @see {@link https://developers.binance.com/docs/derivatives/portfolio-margin-pro/market-data/Portfolio-Margin-Pro-Tiered-Collateral-Rate Binance API Documentation}
     */
    public async portfolioMarginProTieredCollateralRate(
        requestParameters: PortfolioMarginProTieredCollateralRateRequest = {}
    ): Promise<RestApiResponse<PortfolioMarginProTieredCollateralRateResponse>> {
        const localVarAxiosArgs =
            await this.localVarAxiosParamCreator.portfolioMarginProTieredCollateralRate(
                requestParameters?.recvWindow
            );
        return sendRequest<PortfolioMarginProTieredCollateralRateResponse>(
            this.configuration,
            localVarAxiosArgs.endpoint,
            localVarAxiosArgs.method,
            localVarAxiosArgs.params,
            localVarAxiosArgs?.timeUnit,
            { isSigned: true }
        );
    }

    /**
     * Query Portfolio Margin Asset Index Price
     *
     * Weight: 1 if send asset or 50 if not send asset
     *
     * @summary Query Portfolio Margin Asset Index Price (MARKET_DATA)
     * @param {QueryPortfolioMarginAssetIndexPriceRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<QueryPortfolioMarginAssetIndexPriceResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @memberof MarketDataApi
     * @see {@link https://developers.binance.com/docs/derivatives/portfolio-margin-pro/market-data/Query-Portfolio-Margin-Asset-Index-Price Binance API Documentation}
     */
    public async queryPortfolioMarginAssetIndexPrice(
        requestParameters: QueryPortfolioMarginAssetIndexPriceRequest = {}
    ): Promise<RestApiResponse<QueryPortfolioMarginAssetIndexPriceResponse>> {
        const localVarAxiosArgs =
            await this.localVarAxiosParamCreator.queryPortfolioMarginAssetIndexPrice(
                requestParameters?.asset
            );
        return sendRequest<QueryPortfolioMarginAssetIndexPriceResponse>(
            this.configuration,
            localVarAxiosArgs.endpoint,
            localVarAxiosArgs.method,
            localVarAxiosArgs.params,
            localVarAxiosArgs?.timeUnit,
            { isSigned: false }
        );
    }
}
