/**
 * Binance Public Mining REST API
 *
 * OpenAPI Specification for the Binance Public Mining REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ConfigurationRestAPI, RestApiResponse, sendRequest } from '@binance/common';
import { MiningApi } from './modules/mining-api';

import type {
    AccountListRequest,
    CancelHashrateResaleConfigurationRequest,
    EarningsListRequest,
    ExtraBonusListRequest,
    HashrateResaleDetailRequest,
    HashrateResaleListRequest,
    HashrateResaleRequestRequest,
    MiningAccountEarningRequest,
    RequestForDetailMinerListRequest,
    RequestForMinerListRequest,
    StatisticListRequest,
} from './modules/mining-api';

import type {
    AccountListResponse,
    AcquiringAlgorithmResponse,
    AcquiringCoinnameResponse,
    CancelHashrateResaleConfigurationResponse,
    EarningsListResponse,
    ExtraBonusListResponse,
    HashrateResaleDetailResponse,
    HashrateResaleListResponse,
    HashrateResaleRequestResponse,
    MiningAccountEarningResponse,
    RequestForDetailMinerListResponse,
    RequestForMinerListResponse,
    StatisticListResponse,
} from './types';

export class RestAPI {
    private configuration: ConfigurationRestAPI;
    private miningApi: MiningApi;

    constructor(configuration: ConfigurationRestAPI) {
        this.configuration = configuration;
        this.miningApi = new MiningApi(configuration);
    }

    /**
     * Generic function to send a request.
     * @param endpoint - The API endpoint to call.
     * @param method - HTTP method to use (GET, POST, DELETE, etc.).
     * @param params - Query parameters for the request.
     *
     * @returns A promise resolving to the response data object.
     */
    sendRequest<T>(
        endpoint: string,
        method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH',
        params: Record<string, unknown> = {}
    ): Promise<RestApiResponse<T>> {
        return sendRequest<T>(this.configuration, endpoint, method, params, undefined);
    }

    /**
     * Generic function to send a signed request.
     * @param endpoint - The API endpoint to call.
     * @param method - HTTP method to use (GET, POST, DELETE, etc.).
     * @param params - Query parameters for the request.
     *
     * @returns A promise resolving to the response data object.
     */
    sendSignedRequest<T>(
        endpoint: string,
        method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH',
        params: Record<string, unknown> = {}
    ): Promise<RestApiResponse<T>> {
        return sendRequest<T>(this.configuration, endpoint, method, params, undefined, {
            isSigned: true,
        });
    }

    /**
     * Query Account List
     *
     * Weight: 5
     *
     * @summary Account List(USER_DATA)
     * @param {AccountListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<AccountListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Account-List Binance API Documentation}
     */
    accountList(
        requestParameters: AccountListRequest
    ): Promise<RestApiResponse<AccountListResponse>> {
        return this.miningApi.accountList(requestParameters);
    }

    /**
     * Acquiring Algorithm
     *
     * Weight: 1
     *
     * @summary Acquiring Algorithm(MARKET_DATA)
     * @returns {Promise<RestApiResponse<AcquiringAlgorithmResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Acquiring-Algorithm Binance API Documentation}
     */
    acquiringAlgorithm(): Promise<RestApiResponse<AcquiringAlgorithmResponse>> {
        return this.miningApi.acquiringAlgorithm();
    }

    /**
     * Acquiring CoinName
     *
     * Weight: 1
     *
     * @summary Acquiring CoinName(MARKET_DATA)
     * @returns {Promise<RestApiResponse<AcquiringCoinnameResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Acquiring-CoinName Binance API Documentation}
     */
    acquiringCoinname(): Promise<RestApiResponse<AcquiringCoinnameResponse>> {
        return this.miningApi.acquiringCoinname();
    }

    /**
     *
     * Weight: 5
     *
     * @summary Cancel hashrate resale configuration(USER_DATA)
     * @param {CancelHashrateResaleConfigurationRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<CancelHashrateResaleConfigurationResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Cancel-hashrate-resale-configuration Binance API Documentation}
     */
    cancelHashrateResaleConfiguration(
        requestParameters: CancelHashrateResaleConfigurationRequest
    ): Promise<RestApiResponse<CancelHashrateResaleConfigurationResponse>> {
        return this.miningApi.cancelHashrateResaleConfiguration(requestParameters);
    }

    /**
     * Query Earnings List
     *
     * Weight: 5
     *
     * @summary Earnings List(USER_DATA)
     * @param {EarningsListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<EarningsListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Earnings-List Binance API Documentation}
     */
    earningsList(
        requestParameters: EarningsListRequest
    ): Promise<RestApiResponse<EarningsListResponse>> {
        return this.miningApi.earningsList(requestParameters);
    }

    /**
     * Extra Bonus List
     *
     * Weight: 5
     *
     * @summary Extra Bonus List(USER_DATA)
     * @param {ExtraBonusListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<ExtraBonusListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Extra-Bonus-List Binance API Documentation}
     */
    extraBonusList(
        requestParameters: ExtraBonusListRequest
    ): Promise<RestApiResponse<ExtraBonusListResponse>> {
        return this.miningApi.extraBonusList(requestParameters);
    }

    /**
     * Hashrate Resale Detail(USER_DATA)
     *
     * Weight: 5
     *
     * @summary Hashrate Resale Detail(USER_DATA)
     * @param {HashrateResaleDetailRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<HashrateResaleDetailResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Hashrate-Resale-Detail Binance API Documentation}
     */
    hashrateResaleDetail(
        requestParameters: HashrateResaleDetailRequest
    ): Promise<RestApiResponse<HashrateResaleDetailResponse>> {
        return this.miningApi.hashrateResaleDetail(requestParameters);
    }

    /**
     * Hashrate Resale List
     *
     * Weight: 5
     *
     * @summary Hashrate Resale List
     * @param {HashrateResaleListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<HashrateResaleListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Hashrate-Resale-List Binance API Documentation}
     */
    hashrateResaleList(
        requestParameters: HashrateResaleListRequest = {}
    ): Promise<RestApiResponse<HashrateResaleListResponse>> {
        return this.miningApi.hashrateResaleList(requestParameters);
    }

    /**
     * Hashrate Resale Request
     *
     * Weight: 5
     *
     * @summary Hashrate Resale Request(USER_DATA)
     * @param {HashrateResaleRequestRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<HashrateResaleRequestResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Hashrate-Resale-Request Binance API Documentation}
     */
    hashrateResaleRequest(
        requestParameters: HashrateResaleRequestRequest
    ): Promise<RestApiResponse<HashrateResaleRequestResponse>> {
        return this.miningApi.hashrateResaleRequest(requestParameters);
    }

    /**
     * Mining Account Earning
     *
     * Weight: 5
     *
     * @summary Mining Account Earning(USER_DATA)
     * @param {MiningAccountEarningRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<MiningAccountEarningResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Mining-Account-Earning Binance API Documentation}
     */
    miningAccountEarning(
        requestParameters: MiningAccountEarningRequest
    ): Promise<RestApiResponse<MiningAccountEarningResponse>> {
        return this.miningApi.miningAccountEarning(requestParameters);
    }

    /**
     * Request for Detail Miner List
     *
     * Weight: 5
     *
     * @summary Request for Detail Miner List(USER_DATA)
     * @param {RequestForDetailMinerListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<RequestForDetailMinerListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Request-for-Detail-Miner-List Binance API Documentation}
     */
    requestForDetailMinerList(
        requestParameters: RequestForDetailMinerListRequest
    ): Promise<RestApiResponse<RequestForDetailMinerListResponse>> {
        return this.miningApi.requestForDetailMinerList(requestParameters);
    }

    /**
     * Request for Miner List
     *
     * Weight: 5
     *
     * @summary Request for Miner List(USER_DATA)
     * @param {RequestForMinerListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<RequestForMinerListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Request-for-Miner-List Binance API Documentation}
     */
    requestForMinerList(
        requestParameters: RequestForMinerListRequest
    ): Promise<RestApiResponse<RequestForMinerListResponse>> {
        return this.miningApi.requestForMinerList(requestParameters);
    }

    /**
     * Statistic List
     *
     * Weight: 5
     *
     * @summary Statistic List(USER_DATA)
     * @param {StatisticListRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<StatisticListResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/mining/rest-api/Statistic-List Binance API Documentation}
     */
    statisticList(
        requestParameters: StatisticListRequest
    ): Promise<RestApiResponse<StatisticListResponse>> {
        return this.miningApi.statisticList(requestParameters);
    }
}
