/**
 * Binance Fiat REST API
 *
 * OpenAPI Specification for the Binance Fiat REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ConfigurationRestAPI, RestApiResponse, sendRequest } from '@binance/common';
import { FiatApi } from './modules/fiat-api';

import type {
    GetFiatDepositWithdrawHistoryRequest,
    GetFiatPaymentsHistoryRequest,
} from './modules/fiat-api';

import type {
    GetFiatDepositWithdrawHistoryResponse,
    GetFiatPaymentsHistoryResponse,
} from './types';

export class RestAPI {
    private configuration: ConfigurationRestAPI;
    private fiatApi: FiatApi;

    constructor(configuration: ConfigurationRestAPI) {
        this.configuration = configuration;
        this.fiatApi = new FiatApi(configuration);
    }

    /**
     * Generic function to send a request.
     * @param endpoint - The API endpoint to call.
     * @param method - HTTP method to use (GET, POST, DELETE, etc.).
     * @param params - Query parameters for the request.
     *
     * @returns A promise resolving to the response data object.
     */
    sendRequest<T>(
        endpoint: string,
        method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH',
        params: Record<string, unknown> = {}
    ): Promise<RestApiResponse<T>> {
        return sendRequest<T>(this.configuration, endpoint, method, params, undefined);
    }

    /**
     * Generic function to send a signed request.
     * @param endpoint - The API endpoint to call.
     * @param method - HTTP method to use (GET, POST, DELETE, etc.).
     * @param params - Query parameters for the request.
     *
     * @returns A promise resolving to the response data object.
     */
    sendSignedRequest<T>(
        endpoint: string,
        method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH',
        params: Record<string, unknown> = {}
    ): Promise<RestApiResponse<T>> {
        return sendRequest<T>(this.configuration, endpoint, method, params, undefined, {
            isSigned: true,
        });
    }

    /**
     * Get Fiat Deposit/Withdraw History
     *
     * If beginTime and endTime are not sent, the recent 30-day data will be returned.
     *
     * Weight: 90000
     *
     * @summary Get Fiat Deposit/Withdraw History (USER_DATA)
     * @param {GetFiatDepositWithdrawHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFiatDepositWithdrawHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/fiat/rest-api/Get-Fiat-Deposit-Withdraw-History Binance API Documentation}
     */
    getFiatDepositWithdrawHistory(
        requestParameters: GetFiatDepositWithdrawHistoryRequest
    ): Promise<RestApiResponse<GetFiatDepositWithdrawHistoryResponse>> {
        return this.fiatApi.getFiatDepositWithdrawHistory(requestParameters);
    }

    /**
     * Get Fiat Deposit/Withdraw History
     *
     * If beginTime and endTime are not sent, the recent 30-day data will be returned.
     * paymentMethod: Only when requesting payments history for buy (transactionType=0), response contains paymentMethod representing the way of purchase. Now we have:
     * Cash Balance
     * Credit Card
     * Online Banking
     * Bank Transfer
     *
     * Weight: 1
     *
     * @summary Get Fiat Payments History (USER_DATA)
     * @param {GetFiatPaymentsHistoryRequest} requestParameters Request parameters.
     * @returns {Promise<RestApiResponse<GetFiatPaymentsHistoryResponse>>}
     * @throws {RequiredError | ConnectorClientError | UnauthorizedError | ForbiddenError | TooManyRequestsError | RateLimitBanError | ServerError | NotFoundError | NetworkError | BadRequestError}
     * @see {@link https://developers.binance.com/docs/fiat/rest-api/Get-Fiat-Payments-History Binance API Documentation}
     */
    getFiatPaymentsHistory(
        requestParameters: GetFiatPaymentsHistoryRequest
    ): Promise<RestApiResponse<GetFiatPaymentsHistoryResponse>> {
        return this.fiatApi.getFiatPaymentsHistory(requestParameters);
    }
}
